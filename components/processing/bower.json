{
  "name": "processing",
  "version": "1.4.8",
  "main": "processing.js",
  "ignore": [
    "bundle",
    "lib",
    "node_modules",
    "src",
    "test",
    "test.js",
    "test.html",
    "build.js",
    "Gruntfile.js",
    "minify.js",
    "package.json",
    "server.js"
  ],
  "scripts": {
    "start": "node server.js"
  },
  "gitHead": "1132da1f4e17dbcff8a983285cfbe7d5b8a3fc64",
  "readme": "Processing.js\r\n=============\r\n\r\nThis is the compilation repository for Processing.js, building the processing.js library from a series of modules, rather than existing as one large file as was the case in version 1.4.1 and earlier.\r\n\r\nGetting Processing.js\r\n---------------------\r\n\r\nSimply grab the `processing.js` or `processing.min.js` files, include them as script on your webpage, and you're all set. See `test.html` for a simple example of using Processing.js on your pages.\r\n\r\nPlaying with the code\r\n---------------------\r\n\r\nClone this project using git, and ensure you have [node.js](http://nodejs.org) installed. After cloning, install the require node packages using `npm install` in the processing-js directory. Modifying the code and building your own `processing.js` and `processing.min.js` files is then a fairly straight forward process. Modify the code as much as you want or need, then:\r\n\r\n1. Lint: `$> grunt`\r\n2. Test: `$> node test`\r\n\r\nIf step 1 gives you a \"grunt: command not found\" or similar error, run `npm install -g grunt-cli` to make sure grunt is globally installed as CLI command. If step 1 does not throw any errors, step 2 will run the Processing object through a battery of tests. Once the browser reference tests start, your `processing.js` and `processing.min.js` have been successfully built.\r\n\r\nThe test script also accepts the following optional arguments:\r\n\r\n* `--test=testfile.pde` runs one specific test\r\n* `--nobuild` does not build Pjs if all tests pass\r\n* `--failonerror` terminates the run if any error occurs.\r\n* `--noref` will not start a server process and a browser for doing ref testing.\r\n* `--noautoref` will start a server and a browser for ref testing, but doesn't auto-start the tests.\r\n\r\nYou can also perform the post-unit-test steps manually:\r\n\r\n* Build processing.js: `$> browserify build.js -o processing.js`\r\n* Minify processing.js: `$> node minify`\r\n* Run test server: `$> node server`\r\n\r\n\r\nWhile the browser tests run\r\n---------------------------\r\n\r\nWith the test server is running, the following urls are good to know:\r\n\r\n* http://localhost:3000 - vanilla example page\r\n* http://localhost:3000/ref - reference testing page\r\n* http://localhost:3000/perf - performance testing page\r\n* http://localhost:3000/processing-helper.html - utility page for converting/running Processing code\r\n",
  "readmeFilename": "README.md",
  "_id": "Processing.js@1.4.8",
  "description": "Processing.js\r =============",
  "repository": {
    "type": "git",
    "url": "git://github.com/processing-js/processing-js.git"
  }
}